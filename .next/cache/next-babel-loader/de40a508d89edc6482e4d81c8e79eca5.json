{"ast":null,"code":"import _slicedToArray from \"/Users/onuryerlikaya/Desktop/e-commerce-app/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/onuryerlikaya/Desktop/e-commerce-app/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/onuryerlikaya/Desktop/e-commerce-app/Advanced-React/sick-fits/frontend/components/UpdateProduct.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PRODUCT_MUTATION(\\n    $id: ID!\\n    $name: String\\n    $description: String\\n    $price: Int\\n  ) {\\n    updateProduct(\\n      id: $id\\n      data: { id: $id, name: $name, description: $description, price: $price }\\n    ) {\\n      id\\n      name\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\\n    Product(where: { id: $id }) {\\n      id\\n      name\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag/lib/graphql-tag.umd';\nimport { useMutation, useQuery } from '@apollo/client';\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject2());\n\nvar UpdateProduct = function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useMutation = useMutation(UPDATE_PRODUCT_MUTATION, {\n    variables: {\n      id: id\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      updateData = _useMutation2$.data,\n      updateError = _useMutation2$.error,\n      updateLoading = _useMutation2$.loading;\n\n  console.log('single product id loading, error, data', loading, error, data);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Update! \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(UpdateProduct, \"8/dzEGBvSxf7X9PAzjJGRotyfA4=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/onuryerlikaya/Desktop/e-commerce-app/Advanced-React/sick-fits/frontend/components/UpdateProduct.js"],"names":["gql","useMutation","useQuery","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","loading","error","data","updateProduct","updateData","updateError","updateLoading","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,iCAAhB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AAEA,IAAMC,oBAAoB,GAAGH,GAAH,mBAA1B;AAWA,IAAMI,uBAAuB,GAAGJ,GAAH,oBAA7B;;AAmBA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,OAAY;AAAA;;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACCJ,QAAQ,CAACC,oBAAD,EAAuB;AAC9DI,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAFA;AAAF;AADmD,GAAvB,CADT;AAAA,MACxBE,OADwB,aACxBA,OADwB;AAAA,MACfC,KADe,aACfA,KADe;AAAA,MACRC,IADQ,aACRA,IADQ;;AAAA,qBAO5BT,WAAW,CAACG,uBAAD,EAA0B;AACvCG,IAAAA,SAAS,EAAE;AACTD,MAAAA,EAAE,EAAFA;AADS;AAD4B,GAA1B,CAPiB;AAAA;AAAA,MAK9BK,aAL8B;AAAA;AAAA,MAMtBC,UANsB,kBAM5BF,IAN4B;AAAA,MAMHG,WANG,kBAMVJ,KANU;AAAA,MAMmBK,aANnB,kBAMUN,OANV;;AAYhCO,EAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDR,OAAtD,EAA+DC,KAA/D,EAAsEC,IAAtE;AACA,sBAAO;AAAA,2BAAYJ,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAdD;;GAAMD,a;UAC6BH,Q,EAM7BD,W;;;KAPAI,a;AAeN,eAAeA,aAAf","sourcesContent":["import gql from 'graphql-tag/lib/graphql-tag.umd';\nimport { useMutation, useQuery } from '@apollo/client';\n\nconst SINGLE_PRODUCT_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\n    Product(where: { id: $id }) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n  mutation UPDATE_PRODUCT_MUTATION(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  ) {\n    updateProduct(\n      id: $id\n      data: { id: $id, name: $name, description: $description, price: $price }\n    ) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\n\nconst UpdateProduct = ({ id }) => {\n  const { loading, error, data } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: { id },\n  });\n  const [\n    updateProduct,\n    { data: updateData, error: updateError, loading: updateLoading },\n  ] = useMutation(UPDATE_PRODUCT_MUTATION, {\n    variables: {\n      id,\n    },\n  });\n  console.log('single product id loading, error, data', loading, error, data);\n  return <p>Update! {id}</p>;\n};\nexport default UpdateProduct;\n"]},"metadata":{},"sourceType":"module"}