{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/onuryerlikaya/Desktop/e-commerce-app/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/onuryerlikaya/Desktop/e-commerce-app/Advanced-React/sick-fits/frontend/components/UpdateProduct.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\\n    Product(where: { id: $id }) {\\n      id\\n      name\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag/lib/graphql-tag.umd';\nimport { useQuery } from '@apollo/client';\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\n\nvar UpdateProduct = function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_PRODUCT_QUERY({\n    variables: {\n      id: id\n    }\n  })),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  console.log('single product id loading, error, data', loading, error, data);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Update! \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(UpdateProduct, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/onuryerlikaya/Desktop/e-commerce-app/Advanced-React/sick-fits/frontend/components/UpdateProduct.js"],"names":["gql","useQuery","SINGLE_PRODUCT_QUERY","UpdateProduct","id","variables","loading","error","data","console","log"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,iCAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,IAAMC,oBAAoB,GAAGF,GAAH,mBAA1B;;AAWA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,OAAY;AAAA;;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACCH,QAAQ,CACvCC,oBAAoB,CAAC;AACnBG,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAFA;AAAF;AADQ,GAAD,CADmB,CADT;AAAA,MACxBE,OADwB,aACxBA,OADwB;AAAA,MACfC,KADe,aACfA,KADe;AAAA,MACRC,IADQ,aACRA,IADQ;;AAMhCC,EAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDJ,OAAtD,EAA+DC,KAA/D,EAAsEC,IAAtE;AACA,sBAAO;AAAA,2BAAYJ,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CARD;;GAAMD,a;UAC6BF,Q;;;KAD7BE,a;AASN,eAAeA,aAAf","sourcesContent":["import gql from 'graphql-tag/lib/graphql-tag.umd';\nimport { useQuery } from '@apollo/client';\n\nconst SINGLE_PRODUCT_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\n    Product(where: { id: $id }) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\n\nconst UpdateProduct = ({ id }) => {\n  const { loading, error, data } = useQuery(\n    SINGLE_PRODUCT_QUERY({\n      variables: { id },\n    })\n  );\n  console.log('single product id loading, error, data', loading, error, data);\n  return <p>Update! {id}</p>;\n};\nexport default UpdateProduct;\n"]},"metadata":{},"sourceType":"module"}