{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/onuryerlikaya/Desktop/e-commerce-app/Advanced-React/sick-fits/frontend/components/Products.js\";\nimport gql from 'graphql-tag/lib/graphql-tag.umd';\nimport { useQuery } from '@apollo/client';\nimport styled from 'styled-components';\nimport Product from './Product';\nexport const ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n    allProducts(first: $first) {\n      id\n      name\n      price\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nconst ProductsListStyles = styled.div.withConfig({\n  displayName: \"Products__ProductsListStyles\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;\"]);\n\nconst Products = () => {\n  var _data$allProducts;\n\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductsListStyles, {\n      children: data === null || data === void 0 ? void 0 : (_data$allProducts = data.allProducts) === null || _data$allProducts === void 0 ? void 0 : _data$allProducts.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, product === null || product === void 0 ? void 0 : product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Products;","map":{"version":3,"sources":["/Users/onuryerlikaya/Desktop/e-commerce-app/Advanced-React/sick-fits/frontend/components/Products.js"],"names":["gql","useQuery","styled","Product","ALL_PRODUCTS_QUERY","ProductsListStyles","div","Products","data","error","loading","message","allProducts","map","product","id"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,iCAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,kBAAkB,GAAGJ,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfO;AAiBP,MAAMK,kBAAkB,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,iEAAxB;;AAMA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BT,QAAQ,CAACG,kBAAD,CAAzC;AACA,MAAIM,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,2BACE,QAAC,kBAAD;AAAA,gBACGH,IADH,aACGA,IADH,4CACGA,IAAI,CAAEI,WADT,sDACG,kBAAmBC,GAAnB,CAAwBC,OAAD,iBACtB,QAAC,OAAD;AAA2B,QAAA,OAAO,EAAEA;AAApC,SAAcA,OAAd,aAAcA,OAAd,uBAAcA,OAAO,CAAEC,EAAvB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAbD;;AAeA,eAAeR,QAAf","sourcesContent":["import gql from 'graphql-tag/lib/graphql-tag.umd';\nimport { useQuery } from '@apollo/client';\nimport styled from 'styled-components';\nimport Product from './Product';\n\nexport const ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n    allProducts(first: $first) {\n      id\n      name\n      price\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nconst ProductsListStyles = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n`;\n\nconst Products = () => {\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n  return (\n    <div>\n      <ProductsListStyles>\n        {data?.allProducts?.map((product) => (\n          <Product key={product?.id} product={product} />\n        ))}\n      </ProductsListStyles>\n    </div>\n  );\n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}